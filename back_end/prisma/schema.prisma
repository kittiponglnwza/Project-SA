generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      String   @default("User")   // âœ… à¹€à¸žà¸´à¹ˆà¸¡ field à¸™à¸µà¹‰
  createdAt DateTime @default(now())

  bookings Booking[]
}

model Seat {
  id        Int      @id @default(autoincrement())
  zone      String // à¹€à¸Šà¹ˆà¸™ A, B, C, VIP, Room
  type      String // à¹€à¸Šà¹ˆà¸™ à¹‚à¸•à¹Šà¸°à¹€à¸”à¸µà¹ˆà¸¢à¸§, à¹‚à¸•à¹Šà¸°à¸„à¸¹à¹ˆ
  status    String // "à¸§à¹ˆà¸²à¸‡", "à¹„à¸¡à¹ˆà¸§à¹ˆà¸²à¸‡", "à¸‹à¹ˆà¸­à¸¡à¸šà¸³à¸£à¸¸à¸‡"
  condition String // "à¸”à¸µà¹€à¸¢à¸µà¹ˆà¸¢à¸¡", "à¸”à¸µ", "à¸•à¹‰à¸­à¸‡à¸‹à¹ˆà¸­à¸¡"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookings Booking[]
}

model Booking {
  id            Int      @id @default(autoincrement())
  userId        Int
  seatId        Int
  date          DateTime @default(now())
  duration      Int // à¸Šà¸±à¹ˆà¸§à¹‚à¸¡à¸‡
  price         Int
  status        String   @default("active") // active, completed, cancelled
  startTime     String?   // ðŸ•’ à¹€à¸§à¸¥à¸²à¹€à¸£à¸´à¹ˆà¸¡
  endTime       String?   // ðŸ•’ à¹€à¸§à¸¥à¸²à¸ªà¸´à¹‰à¸™à¸ªà¸¸à¸”
  paymentMethod String?   @default("cash") // cash, qr

  user User @relation(fields: [userId], references: [id])
  seat Seat @relation(fields: [seatId], references: [id])
}

