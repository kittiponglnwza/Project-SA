// pages/FoodPage.jsx
import React, { useState } from 'react';
import { Plus, Minus, ShoppingCart, Star } from 'lucide-react';

const FoodPage = () => {
  const [cart, setCart] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState('snacks');

  const categories = {
    snacks: '‡∏Ç‡∏ô‡∏°',
    drinks: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°',
    instant: '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏π‡∏õ',
    desserts: '‡∏Ç‡∏≠‡∏á‡∏´‡∏ß‡∏≤‡∏ô'
  };

  const menuItems = {
    snacks: [
      { id: 1, name: '‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á‡∏°‡∏≤‡∏Å‡∏°‡πà‡∏≤', price: 25, image: 'üçû', rating: 4.5, description: '‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á‡∏Å‡∏£‡∏≠‡∏ö ‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô' },
      { id: 2, name: '‡∏°‡∏±‡∏ô‡∏ù‡∏£‡∏±‡πà‡∏á‡∏ó‡∏≠‡∏î', price: 35, image: 'üçü', rating: 4.8, description: '‡∏°‡∏±‡∏ô‡∏ù‡∏£‡∏±‡πà‡∏á‡∏ó‡∏≠‡∏î‡∏Å‡∏£‡∏≠‡∏ö ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏£‡πâ‡∏≠‡∏ô' },
      { id: 3, name: '‡∏õ‡πä‡∏≠‡∏õ‡∏Ñ‡∏≠‡∏£‡πå‡∏ô', price: 20, image: 'üçø', rating: 4.2, description: '‡∏õ‡πä‡∏≠‡∏õ‡∏Ñ‡∏≠‡∏£‡πå‡∏ô‡∏´‡∏ß‡∏≤‡∏ô ‡∏Å‡∏£‡∏≠‡∏ö‡∏≠‡∏£‡πà‡∏≠‡∏¢' },
      { id: 4, name: '‡∏Ç‡∏ô‡∏°‡∏à‡∏µ‡∏ö‡∏ó‡∏≠‡∏î', price: 30, image: 'ü•ü', rating: 4.6, description: '‡∏Ç‡∏ô‡∏°‡∏à‡∏µ‡∏ö‡∏ó‡∏≠‡∏î‡∏Å‡∏£‡∏≠‡∏ö ‡πÑ‡∏™‡πâ‡πÅ‡∏ô‡πà‡∏ô' }
    ],
    drinks: [
      { id: 5, name: '‡πÇ‡∏Ñ‡πâ‡∏Å', price: 15, image: 'ü•§', rating: 4.7, description: '‡πÇ‡∏Ñ‡πâ‡∏Å‡πÄ‡∏¢‡πá‡∏ô‡πÜ ‡∏™‡∏î‡∏ä‡∏∑‡πà‡∏ô' },
      { id: 6, name: '‡∏Å‡∏≤‡πÅ‡∏ü‡πÄ‡∏¢‡πá‡∏ô', price: 25, image: '‚òï', rating: 4.4, description: '‡∏Å‡∏≤‡πÅ‡∏ü‡πÄ‡∏¢‡πá‡∏ô‡∏´‡∏≠‡∏°‡∏Å‡∏£‡∏∏‡πà‡∏ô' },
      { id: 7, name: '‡∏ô‡πâ‡∏≥‡∏™‡πâ‡∏°', price: 20, image: 'üßÉ', rating: 4.3, description: '‡∏ô‡πâ‡∏≥‡∏™‡πâ‡∏°‡∏Ñ‡∏±‡πâ‡∏ô‡∏™‡∏î ‡πÄ‡∏õ‡∏£‡∏µ‡πâ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô' },
      { id: 8, name: '‡πÄ‡∏£‡∏î‡∏ö‡∏π‡∏•', price: 30, image: 'ü•§', rating: 4.9, description: '‡πÄ‡∏£‡∏î‡∏ö‡∏π‡∏• ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏•‡∏±‡∏á' }
    ],
    instant: [
      { id: 9, name: '‡∏°‡∏≤‡∏°‡πà‡∏≤', price: 15, image: 'üçú', rating: 4.1, description: '‡∏ö‡∏∞‡∏´‡∏°‡∏µ‡πà‡∏Å‡∏∂‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏π‡∏õ ‡∏£‡∏™‡∏ï‡πâ‡∏°‡∏¢‡∏≥' },
      { id: 10, name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡πÑ‡∏Ç‡πà', price: 45, image: 'üç≥', rating: 4.5, description: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡πÑ‡∏Ç‡πà ‡∏≠‡∏£‡πà‡∏≠‡∏¢‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ó‡∏≥‡πÄ‡∏≠‡∏á' },
      { id: 11, name: '‡πÅ‡∏ã‡∏ô‡∏ß‡∏¥‡∏ä', price: 35, image: 'ü•™', rating: 4.0, description: '‡πÅ‡∏ã‡∏ô‡∏ß‡∏¥‡∏ä‡πÑ‡∏Ç‡πà ‡∏ú‡∏±‡∏Å‡∏™‡∏•‡∏±‡∏î' },
      { id: 12, name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πà‡∏≠‡∏á', price: 50, image: 'üç±', rating: 4.3, description: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πà‡∏≠‡∏á ‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢' }
    ],
    desserts: [
      { id: 13, name: '‡πÑ‡∏≠‡∏®‡∏Å‡∏£‡∏µ‡∏°', price: 20, image: 'üç¶', rating: 4.6, description: '‡πÑ‡∏≠‡∏®‡∏Å‡∏£‡∏µ‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏™' },
      { id: 14, name: '‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ä‡πá‡∏≠‡∏Å‡πÇ‡∏Å‡πÅ‡∏•‡∏ï', price: 40, image: 'üç∞', rating: 4.8, description: '‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ä‡πá‡∏≠‡∏Å‡πÇ‡∏Å‡πÅ‡∏•‡∏ï ‡∏´‡∏ß‡∏≤‡∏ô‡∏°‡∏±‡∏ô' },
      { id: 15, name: '‡πÇ‡∏î‡∏ô‡∏±‡∏ó', price: 25, image: 'üç©', rating: 4.4, description: '‡πÇ‡∏î‡∏ô‡∏±‡∏ó‡∏ô‡∏∏‡πà‡∏° ‡∏´‡∏ß‡∏≤‡∏ô‡∏´‡∏≠‡∏°' },
      { id: 16, name: '‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ', price: 30, image: 'üç™', rating: 4.2, description: '‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡∏Å‡∏£‡∏≠‡∏ö ‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡∏î‡∏µ' }
    ]
  };

  const addToCart = (item) => {
    const existingItem = cart.find(cartItem => cartItem.id === item.id);
    if (existingItem) {
      setCart(cart.map(cartItem => 
        cartItem.id === item.id 
          ? { ...cartItem, quantity: cartItem.quantity + 1 }
          : cartItem
      ));
    } else {
      setCart([...cart, { ...item, quantity: 1 }]);
    }
  };

  const removeFromCart = (itemId) => {
    const existingItem = cart.find(cartItem => cartItem.id === itemId);
    if (existingItem && existingItem.quantity > 1) {
      setCart(cart.map(cartItem => 
        cartItem.id === itemId 
          ? { ...cartItem, quantity: cartItem.quantity - 1 }
          : cartItem
      ));
    } else {
      setCart(cart.filter(cartItem => cartItem.id !== itemId));
    }
  };

  const getTotalPrice = () => {
    return cart.reduce((total, item) => total + (item.price * item.quantity), 0);
  };

  const getItemQuantity = (itemId) => {
    const item = cart.find(cartItem => cartItem.id === itemId);
    return item ? item.quantity : 0;
  };

  const handleOrder = () => {
    if (cart.length === 0) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠');
      return;
    }
    
    const orderSummary = cart.map(item => 
      `${item.name} x${item.quantity} = ${item.price * item.quantity}‡∏ø`
    ).join('\n');
    
    alert(`‚úÖ ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n${orderSummary}\n\n‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô: ${getTotalPrice()}‡∏ø\n\n‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡πÉ‡∏ô 10-15 ‡∏ô‡∏≤‡∏ó‡∏µ`);
    setCart([]);
  };

  return (
    <div className="space-y-8">
      {/* Header */}
      <div className="mb-8">
        <h2 className="text-4xl lg:text-5xl font-bold mb-2 bg-gradient-to-r from-orange-400 to-red-600 bg-clip-text text-transparent">
          üçï ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£
        </h2>
        <div className="w-20 h-1 bg-gradient-to-r from-orange-500 to-red-500 rounded-full"></div>
      </div>

      {/* Category Tabs */}
      <div className="flex flex-wrap gap-3 mb-8">
        {Object.entries(categories).map(([key, label]) => (
          <button
            key={key}
            onClick={() => setSelectedCategory(key)}
            className={`
              px-6 py-3 rounded-full font-medium transition-all duration-300
              ${selectedCategory === key
                ? 'bg-gradient-to-r from-orange-500 to-red-600 text-white shadow-lg shadow-orange-500/25'
                : 'bg-slate-800 text-slate-300 border border-slate-600 hover:border-orange-400 hover:text-orange-400 hover:-translate-y-1'
              }
            `}
          >
            {label}
          </button>
        ))}
      </div>

      <div className="grid lg:grid-cols-4 gap-8">
        {/* Menu Items */}
        <div className="lg:col-span-3">
          <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
            {menuItems[selectedCategory].map((item) => {
              const quantity = getItemQuantity(item.id);
              return (
                <div key={item.id} className="bg-slate-800/60 backdrop-blur-sm rounded-2xl p-6 border border-slate-700 hover:border-orange-400/50 transition-all duration-300 hover:-translate-y-1">
                  {/* Item Image */}
                  <div className="text-6xl text-center mb-4">
                    {item.image}
                  </div>

                  {/* Item Info */}
                  <div className="text-center mb-4">
                    <h3 className="text-xl font-bold text-white mb-2">{item.name}</h3>
                    <p className="text-slate-400 text-sm mb-3">{item.description}</p>
                    
                    {/* Rating */}
                    <div className="flex items-center justify-center gap-2 mb-3">
                      <Star className="w-4 h-4 text-yellow-400 fill-current" />
                      <span className="text-yellow-400 font-medium">{item.rating}</span>
                    </div>

                    <div className="text-2xl font-bold text-orange-400 mb-4">
                      {item.price}‡∏ø
                    </div>
                  </div>

                  {/* Add to Cart Controls */}
                  {quantity === 0 ? (
                    <button
                      onClick={() => addToCart(item)}
                      className="w-full bg-gradient-to-r from-orange-500 to-red-600 hover:from-orange-600 hover:to-red-700 text-white py-3 px-4 rounded-xl font-medium transition-all duration-300 flex items-center justify-center gap-2"
                    >
                      <Plus size={20} />
                      ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                    </button>
                  ) : (
                    <div className="flex items-center justify-between bg-slate-700 rounded-xl p-2">
                      <button
                        onClick={() => removeFromCart(item.id)}
                        className="bg-red-500 hover:bg-red-600 text-white w-10 h-10 rounded-lg flex items-center justify-center transition-colors"
                      >
                        <Minus size={18} />
                      </button>
                      <span className="text-white font-bold text-lg mx-4">{quantity}</span>
                      <button
                        onClick={() => addToCart(item)}
                        className="bg-green-500 hover:bg-green-600 text-white w-10 h-10 rounded-lg flex items-center justify-center transition-colors"
                      >
                        <Plus size={18} />
                      </button>
                    </div>
                  )}
                </div>
              );
            })}
          </div>
        </div>

        {/* Shopping Cart */}
        <div className="lg:col-span-1">
          <div className="sticky top-8">
            <div className="bg-slate-800/60 backdrop-blur-sm rounded-2xl p-6 border border-slate-700">
              <div className="flex items-center gap-3 mb-6">
                <ShoppingCart className="text-orange-400" size={24} />
                <h3 className="text-xl font-bold text-white">‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h3>
              </div>

              {cart.length === 0 ? (
                <div className="text-center py-8">
                  <div className="text-4xl mb-4">üõí</div>
                  <p className="text-slate-400">‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤</p>
                  <p className="text-slate-500 text-sm mt-2">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</p>
                </div>
              ) : (
                <div className="space-y-4">
                  {/* Cart Items */}
                  <div className="space-y-3 max-h-64 overflow-y-auto">
                    {cart.map((item) => (
                      <div key={item.id} className="flex items-center justify-between bg-slate-700/50 rounded-xl p-3">
                        <div className="flex-1">
                          <h4 className="text-white font-medium text-sm">{item.name}</h4>
                          <p className="text-orange-400 text-sm">{item.price}‡∏ø x {item.quantity}</p>
                        </div>
                        <div className="text-white font-bold">
                          {item.price * item.quantity}‡∏ø
                        </div>
                      </div>
                    ))}
                  </div>

                  {/* Total */}
                  <div className="border-t border-slate-600 pt-4">
                    <div className="flex justify-between items-center text-lg font-bold mb-4">
                      <span className="text-slate-300">‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô</span>
                      <span className="text-orange-400">{getTotalPrice()}‡∏ø</span>
                    </div>

                    {/* Order Button */}
                    <button
                      onClick={handleOrder}
                      className="w-full bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white py-3 px-4 rounded-xl font-bold transition-all duration-300 flex items-center justify-center gap-2"
                    >
                      <ShoppingCart size={20} />
                      ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£
                    </button>

                    {/* Clear Cart */}
                    <button
                      onClick={() => setCart([])}
                      className="w-full mt-3 bg-slate-600 hover:bg-slate-700 text-white py-2 px-4 rounded-xl font-medium transition-colors text-sm"
                    >
                      ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                    </button>
                  </div>
                </div>
              )}
            </div>

            {/* Order Info */}
            <div className="mt-6 bg-blue-500/10 border border-blue-400/30 rounded-2xl p-4">
              <h4 className="text-blue-400 font-bold mb-2">üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h4>
              <div className="text-slate-300 text-sm space-y-1">
                <p>‚Ä¢ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°: 10-15 ‡∏ô‡∏≤‡∏ó‡∏µ</p>
                <p>‚Ä¢ ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ñ‡∏∂‡∏á‡πÇ‡∏ï‡πä‡∏∞: ‡∏ü‡∏£‡∏µ</p>
                <p>‚Ä¢ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô</p>
                <p>‚Ä¢ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default FoodPage;